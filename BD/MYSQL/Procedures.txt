CREATE PROCEDURE cadastro_cliente(IN _cpf VARCHAR(20), IN _nome TEXT, IN _data_nasc DATE,
				IN _telefone VARCHAR(20), IN _email VARCHAR(100), IN _senha VARCHAR(12),
				IN _endereco TEXT, IN _cep VARCHAR(20), IN _cidade VARCHAR(50), IN _estado CHAR(2), IN _caminho_foto_perfil TEXT)
BEGIN    
    SET @query = CONCAT("INSERT INTO cliente (cpf, nome, data_nasc,telefone, email, senha, endereco, cep, cidade, estado, caminho_foto_perfil) VALUES (", QUOTE(_cpf),",", QUOTE(_nome),",", QUOTE(_data_nasc),",", QUOTE(_telefone),",", QUOTE(_email),",", QUOTE(_senha),",", QUOTE(_endereco),",", QUOTE(_cep),",", QUOTE(_cidade),",", QUOTE(_estado),",", QUOTE(_esta_caminho_foto_perfildo),");");
    PREPARE stmt FROM @query;
    EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    SET @query = NULL;
END;


SELECT produto.nome AS produto, produto.preco, qntd_disponivel, categoria, cliente.nome, produto.data_cadastro AS data_anuncio, produto.avaliacao AS avaliacao_produto, produto.num_vendas AS num_vendas_produto, produto.num_visualizacao AS visualizacoes, caminho_foto AS foto FROM produto INNER JOIN cliente ON cliente.email = produto.produtor_fk INNER JOIN img_produto ON img_produto.produto_fk = produto.codigo WHERE produtor_fk = 'hugomori@live.com' AND caminho_foto = (SELECT caminho_foto FROM img_produto WHERE produto_fk = produto.codigo LIMIT 1) ORDER BY data_anuncio ASC LIMIT

DROP PROCEDURE IF EXISTS requestAllDadosProduto;
DELIMITER $$
CREATE PROCEDURE requestAllDadosProduto(pagina INT , itens_por_pagina INT, vendedor VARCHAR(100))
BEGIN
  SELECT 
    produto.codigo AS codigo,
    produto.nome AS produto, 
    produto.preco, 
    qntd_disponivel,
    qntd_min_vendida,
    categoria,
    tipo_venda,
    data_producao,
    data_validade,
    cliente.cpf AS vendedor_fk, 
    cliente.nome AS vendedor, 
    produto.data_cadastro AS data_anuncio, 
    produto.avaliacao AS avaliacao_produto, 
    produto.num_vendas AS num_vendas_produto, 
    produto.num_visualizacao AS visualizacoes, 
    caminho_foto AS foto 
  FROM produto 
  INNER JOIN cliente ON cliente.email = produto.produtor_fk 
  INNER JOIN img_produto ON img_produto.produto_fk = produto.codigo 
  WHERE 
  	produtor_fk = vendedor 
  AND 
  	caminho_foto = (SELECT caminho_foto FROM img_produto WHERE produto_fk = produto.codigo LIMIT 1) 
    ORDER BY data_anuncio ASC LIMIT pagina, itens_por_pagina;
END $$

DELIMITER ;

CALL requestAllDadosProduto(0, 10, 'hugomori@live.com');

DROP PROCEDURE IF EXISTS requestDadosProduto;
DELIMITER $$
CREATE PROCEDURE requestDadosProduto(codigo INT)
BEGIN
  SELECT 
    produto.nome AS produto, 
    produto.preco, 
    qntd_disponivel,
    qntd_min_vendida, 
    categoria,
    tipo_venda,
    data_producao,
    data_validade,
    descricao,
    cliente.nome AS vendedor,
    cliente.num_vendas AS vendas_vendedor,
    cliente.avaliacao AS vendedor_avaliacao,
    cliente.cidade,
    cliente.estado,
    produto.data_cadastro AS data_anuncio, 
    produto.avaliacao AS avaliacao_produto, 
    produto.num_vendas AS num_vendas_produto, 
    produto.num_visualizacao AS visualizacoes,
    caminho_foto AS foto 
  FROM produto 
  INNER JOIN cliente ON cliente.email = produto.produtor_fk
  INNER JOIN img_produto ON img_produto.produto_fk = produto.codigo  
  WHERE 
  	produto.codigo = codigo
  AND 
  	caminho_foto = (SELECT caminho_foto FROM img_produto WHERE produto_fk = codigo LIMIT 1);
END $$

DELIMITER ;

CALL requestDadosProduto(2);


DROP PROCEDURE IF EXISTS requestDadosCarrinho;
DELIMITER $$
CREATE PROCEDURE requestDadosCarrinho(cliente_email VARCHAR(100))
BEGIN
  SELECT 
    carrinho.id_carrinho AS carrinho,
    produto.nome AS produto, 
    produto.preco,
    carrinho.qntd_produto AS qntd,
    categoria,
    tipo_venda,
    produto.codigo AS produto_id,
    cliente.nome AS vendedor,
    cliente.cidade,
    cliente.estado,
    caminho_foto AS foto 
  FROM carrinho
  INNER JOIN produto ON produto.codigo = carrinho.produto_fk
  INNER JOIN cliente ON cliente.email = produto.produtor_fk 
  INNER JOIN img_produto ON img_produto.produto_fk = produto.codigo  
  WHERE 
  	carrinho.cliente_fk = cliente_email 
  AND 
  	caminho_foto = (SELECT caminho_foto FROM img_produto WHERE produto_fk = codigo LIMIT 1);
END $$

DELIMITER ;

CALL requestDadosCarrinho('natyborges@hotmail.com');


SELECT IFNULL(ROUND(SUM(produto.preco * carrinho.qntd_produto),2),0) AS total, COUNT(id_carrinho) AS qntd_produtos FROM carrinho INNER JOIN produto ON produto.codigo = carrinho.produto_fk WHERE carrinho.cliente_fk = 'hugomori@live.com'



DROP PROCEDURE IF EXISTS requestAllVendas;
DELIMITER $$
CREATE PROCEDURE requestAllVendas(cliente_email VARCHAR(100), pagina INT, itens_por_pagina INT)
BEGIN
  SELECT 
    compras.id_compra AS compra,
    compras.qntd_comprada,
    compras.data_compra,
    produto.codigo AS produto_id,
    produto.nome AS produto, 
    produto.preco,
    produto.tipo_venda, 
    produto.categoria,
    cliente.nome AS comprador,
    cliente.cidade,
    cliente.estado,
    caminho_foto AS foto_produto 
  FROM compras
  INNER JOIN produto ON produto.codigo = compras.produto_fk
  INNER JOIN cliente ON cliente.email = compras.cliente_fk 
  INNER JOIN img_produto ON img_produto.produto_fk = produto.codigo  
  WHERE 
  	produto.produtor_fk = cliente_email 
  AND 
  	caminho_foto = (SELECT caminho_foto FROM img_produto WHERE produto_fk = codigo LIMIT 1)
  ORDER BY compras.data_compra ASC LIMIT pagina, itens_por_pagina;
END $$

SELECT COUNT(compras.id_compra) AS qntd_vendas FROM compras INNER JOIN produto ON compras.produto_fk = produto.codigo WHERE produto.produtor_fk = 'hugomori@live.com'

DROP PROCEDURE IF EXISTS requestAllCompras;
DELIMITER $$
CREATE PROCEDURE requestAllCompras(cliente_email VARCHAR(100), pagina INT, itens_por_pagina INT)
BEGIN
  SELECT 
    compras.id_compra AS compra,
    compras.qntd_comprada,
    compras.data_compra,
    produto.codigo AS produto_id,
    produto.nome AS produto, 
    produto.preco,
    produto.tipo_venda, 
    produto.categoria,
    cliente.nome AS vendedor,
    cliente.cidade,
    cliente.estado,
    caminho_foto AS foto_produto 
  FROM compras
  INNER JOIN produto ON produto.codigo = compras.produto_fk
  INNER JOIN cliente ON cliente.email = produto.produtor_fk 
  INNER JOIN img_produto ON img_produto.produto_fk = produto.codigo  
  WHERE 
  	compras.cliente_fk = cliente_email 
  AND 
  	caminho_foto = (SELECT caminho_foto FROM img_produto WHERE produto_fk = codigo LIMIT 1)
  ORDER BY compras.data_compra ASC LIMIT pagina, itens_por_pagina;
END $$
